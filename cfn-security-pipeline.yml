AWSTemplateFormatVersion: 2010-09-09
Description: Deploys a sample CodePipeline to scan and deploy CFN templates
Parameters:
  InitialCommitBucket:
    Type: String
    Description: The name of the S3 bucket containing the package for the initial commit for the DevSecOps pipeline
  InitialCommitKey:
    Type: String
    Description: Name of the package for the initial commit for the DevSecOps pipeline DO NOT include .zip
    Default: cfn-devsecops
  ExampleStackName:
    Type: String
    Description: Name of the stack to be deployed in the final stage. Placeholder value and will likely not scale in prod
    Default: SecDevOpsStack
Resources:
  DevSecOpsCICDCodeCommit:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: Contains the Dockerfile and other scripts for the DevSecOps container scanning CICD pipeline
      RepositoryName: cfn-devsecops
      Code:
        S3:
          Bucket: !Ref InitialCommitBucket
          Key: !Sub '${InitialCommitKey}.zip'
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
      Policies:
      - PolicyName: CodeBuildServiceRolePolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - codecommit:GitPull
            Resource: !GetAtt DevSecOpsCICDCodeCommit.Arn
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            # these permissions are to create the stack within the pipeline
            - s3:CreateBucket 
            - codecommit:CreateRepository 
            Resource: '*'
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:PutObject
            - s3:GetBucketAcl
            - s3:GetBucketLocation
            Resource:
              - !Sub 'arn:aws:s3:::${DevSecOpsCICDCodePipelineArtifactBucket}'
              - !Sub 'arn:aws:s3:::${DevSecOpsCICDCodePipelineArtifactBucket}/*'
          - Effect: Allow
            Action:
            - kms:Decrypt
            - ssm:GetParameter
            - ssm:GetParameters
            - cloudformation:DetectStackSetDrift
            - cloudformation:ListExports
            - cloudformation:DescribeStackDriftDetectionStatus
            - cloudformation:DetectStackDrift
            - cloudformation:ListStackSetOperations
            - cloudformation:ListStackInstances
            - cloudformation:ListTypes
            - cloudformation:DescribeStackResource
            - cloudformation:UpdateStackSet
            - cloudformation:CreateChangeSet
            - cloudformation:CreateStackInstances
            - cloudformation:ListTypeRegistrations
            - cloudformation:ListStackSetOperationResults
            - cloudformation:DetectStackResourceDrift
            - cloudformation:EstimateTemplateCost
            - cloudformation:DescribeStackEvents
            - cloudformation:DescribeStackSetOperation
            - cloudformation:UpdateStack
            - cloudformation:DescribeAccountLimits
            - cloudformation:DescribeChangeSet
            - cloudformation:CreateStackSet
            - cloudformation:ExecuteChangeSet
            - cloudformation:ListStackResources
            - cloudformation:SetStackPolicy
            - cloudformation:ListStacks
            - cloudformation:DescribeType
            - cloudformation:ListImports
            - cloudformation:DescribeStackInstance
            - cloudformation:DescribeStackResources
            - cloudformation:DeleteStackSet
            - cloudformation:DescribeTypeRegistration
            - cloudformation:GetTemplateSummary
            - cloudformation:DescribeStacks
            - cloudformation:DescribeStackResourceDrifts
            - cloudformation:GetStackPolicy
            - cloudformation:DescribeStackSet
            - cloudformation:ListStackSets
            - cloudformation:CreateStack
            - cloudformation:GetTemplate
            - cloudformation:DeleteStack
            - cloudformation:ValidateTemplate
            - cloudformation:ListChangeSets
            - cloudformation:ListTypeVersions 
            Resource: '*'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal: { Service: codebuild.amazonaws.com }
          Action:
          - sts:AssumeRole
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
      - PolicyName: CodePipelineServiceRolePolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - codecommit:CancelUploadArchive
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:GetUploadArchiveStatus
            - codecommit:UploadArchive
            Resource: !GetAtt DevSecOpsCICDCodeCommit.Arn
          - Effect: Allow
            Action:
            - cloudwatch:*
            Resource: '*'
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:PutObject
            - s3:GetBucketAcl
            - s3:GetBucketLocation
            - s3:PutBucketPolicy
            - s3:ListAllMyBuckets
            - s3:ListBucket
            Resource:
              - !Sub 'arn:aws:s3:::${DevSecOpsCICDCodePipelineArtifactBucket}'
              - !Sub 'arn:aws:s3:::${DevSecOpsCICDCodePipelineArtifactBucket}/*'
          - Effect: Allow
            Action:
            - codebuild:BatchGetBuilds
            - codebuild:StartBuild
            Resource:
              - !GetAtt LintingStage.Arn
              - !GetAtt SecretScanStage.Arn
              - !GetAtt CfRipperStage.Arn
              - !GetAtt CfnNagStage.Arn
              - !GetAtt CheckovDeploymentStage.Arn
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal: { Service: codepipeline.amazonaws.com }
          Action:
          - sts:AssumeRole
  DevSecOpsCICDCodePipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'devsecopscicd-artifacts-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  LintingStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: Uses python-cfn-lint to lint CFN Templates - Managed by CloudFormation
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: True
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      Name: CFN-Linter
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        BuildSpec: buildspecs/lint-buildspec.yaml
        Type: CODEPIPELINE
  SecretScanStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: Uses Yelp's Detect-Secrets to look for any secrets or sensitive material - Managed by CloudFormation
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: True
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      Name: CFN-Secrets
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        BuildSpec: buildspecs/secrets-buildspec.yml
        Type: CODEPIPELINE
  CfRipperStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: Uses CF-Ripper to perfrom static security analysis of CloudFormation templates - Managed by CloudFormation
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: True
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      Name: CF-Ripper
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        BuildSpec: buildspecs/cfripper-buildspec.yml
        Type: CODEPIPELINE
  CfnNagStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: Uses CFN-Nag to perfrom static security analysis of CloudFormation templates - Managed by CloudFormation
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: True
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      Name: CFN-Nag
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        BuildSpec: buildspecs/cfnnag-buildspec.yml
        Type: CODEPIPELINE
  CheckovDeploymentStage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: Uses Checkov to perform static security analysis of CloudFormation templates before creating and deploying a stack - Managed by CloudFormation
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        EnvironmentVariables:
        - Name: STACK_NAME
          Type: PLAINTEXT
          Value: !Ref ExampleStackName
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      Name: CheckovDeploymentStage
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        BuildSpec: buildspecs/checkov-createstack-buildspec.yml
        Type: CODEPIPELINE
  DevSecOpsCICDCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref DevSecOpsCICDCodePipelineArtifactBucket
        Type: S3
      Name: !Sub 'DevSecOpsCICD-scan-cicd-pipeline-${AWS::AccountId}'
      RestartExecutionOnUpdate: True
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                RepositoryName: !GetAtt DevSecOpsCICDCodeCommit.Name
                BranchName: master
              OutputArtifacts:
                -
                  Name: SourceOutput
              RunOrder: 1
        -
          Name: CFN-Linter
          Actions:
            -
              InputArtifacts:
                -
                  Name: SourceOutput
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                  ProjectName: !Ref LintingStage
                  PrimarySource: SourceOutput
              RunOrder: 2
        -
          Name: CFN-Secrets
          Actions:
            -
              InputArtifacts:
                -
                  Name: SourceOutput
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                  ProjectName: !Ref SecretScanStage
                  PrimarySource: SourceOutput
              RunOrder: 3
        -
          Name: CF-Ripper
          Actions:
            -
              InputArtifacts:
                -
                  Name: SourceOutput
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                  ProjectName: !Ref CfRipperStage
                  PrimarySource: SourceOutput
              RunOrder: 4
        -
          Name: CFN-Nag
          Actions:
            -
              InputArtifacts:
                -
                  Name: SourceOutput
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                  ProjectName: !Ref CfnNagStage
                  PrimarySource: SourceOutput
              RunOrder: 5
        -
          Name: CheckovDeploymentStage
          Actions:
            -
              InputArtifacts:
                -
                  Name: SourceOutput
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                  ProjectName: !Ref CheckovDeploymentStage
                  PrimarySource: SourceOutput
              RunOrder: 6
